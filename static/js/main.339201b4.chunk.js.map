{"version":3,"sources":["ui/serviceWorker.js","ui/components/sign_up/styles.js","ui/components/sign_up/index.js","ui/theme/index.js","index.js"],"names":["Boolean","window","location","hostname","match","style","theme","avatar","margin","spacing","backgroundColor","palette","secondary","main","paper","marginTop","display","flexDirection","alignItems","form","width","submit","Copyright","Typography","align","color","variant","Link","href","Date","getFullYear","withStyles","classes","Container","component","maxWidth","className","Avatar","noValidate","Grid","container","item","sm","xs","TextField","autoComplete","autoFocus","fullWidth","id","label","name","required","type","FormControlLabel","control","Checkbox","value","Button","justify","Box","mt","createMuiTheme","background","default","common","black","white","error","contrastText","dark","light","primary","text","disabled","hint","typography","fontFamily","join","htmlFontSize","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","CssBaseline","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console","message"],"mappings":"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","file":"static/js/main.339201b4.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const style = (theme) => ({\r\n\tavatar: {\r\n\t\tmargin: theme.spacing(1),\r\n\t\tbackgroundColor: theme.palette.secondary.main,\r\n\t},\r\n\r\n\tpaper: {\r\n\t\tmarginTop: theme.spacing(8),\r\n\t\tdisplay: 'flex',\r\n\t\tflexDirection: 'column',\r\n\t\talignItems: 'center',\r\n\t},\r\n\tform: {\r\n\t\twidth: '100%', // Fix IE 11 issue.\r\n\t\tmarginTop: theme.spacing(3),\r\n\t},\r\n\tsubmit: {\r\n\t\tmargin: theme.spacing(3, 0, 2),\r\n\t},\r\n});\r\n\r\nexport default style;\r\n","import {\r\n\tAvatar,\r\n\tBox,\r\n\tButton,\r\n\tCheckbox,\r\n\tContainer,\r\n\tFormControlLabel,\r\n\tGrid,\r\n\tLink,\r\n\tTextField,\r\n\tTypography,\r\n\twithStyles,\r\n} from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport PropTypes from 'prop-types';\r\nimport React from 'react';\r\nimport style from './styles';\r\n\r\nconst Copyright = () => (\r\n\t<Typography align=\"center\" color=\"textSecondary\" variant=\"body2\">\r\n\t\t{'Copyright © '}\r\n\t\t<Link color=\"inherit\" href=\"https://farmersonline.co.in/\">\r\n        Farmers Online\r\n\t\t</Link>{' '}\r\n\t\t{new Date().getFullYear()}\r\n\t\t{'.'}\r\n\t</Typography>\r\n);\r\n\r\nconst SignUp = ({ ...props }) => {\r\n\tconst { classes } = props;\r\n\r\n\treturn (\r\n\t\t<Container component=\"main\" maxWidth=\"xs\">\r\n\t\t\t<div className={classes.paper}>\r\n\t\t\t\t<Avatar className={classes.avatar}>\r\n\t\t\t\t\t<LockOutlinedIcon />\r\n\t\t\t\t</Avatar>\r\n\t\t\t\t<Typography component=\"h1\" variant=\"h5\">\r\n          Sign up\r\n\t\t\t\t</Typography>\r\n\t\t\t\t<form className={classes.form} noValidate>\r\n\t\t\t\t\t<Grid container spacing={2}>\r\n\t\t\t\t\t\t<Grid item sm={6} xs={12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tautoComplete=\"fname\"\r\n\t\t\t\t\t\t\t\tautoFocus\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tid=\"firstName\"\r\n\t\t\t\t\t\t\t\tlabel=\"First Name\"\r\n\t\t\t\t\t\t\t\tname=\"firstName\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item sm={6} xs={12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tautoComplete=\"lname\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tid=\"lastName\"\r\n\t\t\t\t\t\t\t\tlabel=\"Last Name\"\r\n\t\t\t\t\t\t\t\tname=\"lastName\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tautoComplete=\"phone\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tid=\"phone\"\r\n\t\t\t\t\t\t\t\tlabel=\"Phone Number\"\r\n\t\t\t\t\t\t\t\tname=\"phone\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<TextField\r\n\t\t\t\t\t\t\t\tautoComplete=\"current-password\"\r\n\t\t\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\t\t\tid=\"password\"\r\n\t\t\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\t\t\trequired\r\n\t\t\t\t\t\t\t\ttype=\"password\"\r\n\t\t\t\t\t\t\t\tvariant=\"outlined\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t\t<Grid item xs={12}>\r\n\t\t\t\t\t\t\t<FormControlLabel\r\n\t\t\t\t\t\t\t\tcontrol={<Checkbox color=\"primary\" value=\"allowExtraEmails\" />}\r\n\t\t\t\t\t\t\t\tlabel=\"I want to receive notifications and updates via text messages.\"\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tclassName={classes.submit}\r\n\t\t\t\t\t\tcolor=\"primary\"\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\ttype=\"submit\"\r\n\t\t\t\t\t\tvariant=\"contained\"\r\n\t\t\t\t\t>\r\n            Sign Up\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t\t<Grid container justify=\"flex-end\">\r\n\t\t\t\t\t\t<Grid item>\r\n\t\t\t\t\t\t\t<Link href=\"https://farmersonline.co.in/\" variant=\"body2\">\r\n                Already have an account? Sign in\r\n\t\t\t\t\t\t\t</Link>\r\n\t\t\t\t\t\t</Grid>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t</form>\r\n\t\t\t</div>\r\n\t\t\t<Box mt={5}>\r\n\t\t\t\t<Copyright />\r\n\t\t\t</Box>\r\n\t\t</Container>\r\n\t);\r\n};\r\n\r\nSignUp.propTypes = {\r\n\tclasses: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default withStyles(style)(SignUp);\r\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core/styles';\r\n\r\nconst theme = createMuiTheme({\r\n\tpalette: {\r\n\t\tbackground: {\r\n\t\t\tdefault: '#fafafa',\r\n\t\t\tpaper: '#fff',\r\n\t\t},\r\n\t\tcommon: {\r\n\t\t\tblack: '#000',\r\n\t\t\twhite: '#fff',\r\n\t\t},\r\n\t\terror: {\r\n\t\t\tcontrastText: '#fff',\r\n\t\t\tdark: '#d32f2f',\r\n\t\t\tlight: '#e57373',\r\n\t\t\tmain: '#f44336',\r\n\t\t},\r\n\t\tprimary: {\r\n\t\t\tcontrastText: '#fff',\r\n\t\t\tdark: '#303f9f',\r\n\t\t\tlight: '#7986cb',\r\n\t\t\tmain: 'rgba(48, 63, 159, 1)',\r\n\t\t},\r\n\t\tsecondary: {\r\n\t\t\tcontrastText: '#fff',\r\n\t\t\tdark: '#c51162',\r\n\t\t\tlight: '#ff4081',\r\n\t\t\tmain: 'rgba(245, 0, 87, 1)',\r\n\t\t},\r\n\t\ttext: {\r\n\t\t\tdisabled: 'rgba(0, 0, 0, 0.38)',\r\n\t\t\thint: 'rgba(0, 0, 0, 0.38)',\r\n\t\t\tprimary: 'rgba(0, 0, 0, 0.87)',\r\n\t\t\tsecondary: 'rgba(0, 0, 0, 0.54)',\r\n\t\t},\r\n\t\ttypography: {\r\n\t\t\tfontFamily: [\r\n\t\t\t\t'-apple-system',\r\n\t\t\t\t'BlinkMacSystemFont',\r\n\t\t\t\t'\"Segoe UI\"',\r\n\t\t\t\t'Roboto',\r\n\t\t\t\t'\"Helvetica Neue\"',\r\n\t\t\t\t'Arial',\r\n\t\t\t\t'sans-serif',\r\n\t\t\t\t'\"Apple Color Emoji\"',\r\n\t\t\t\t'\"Segoe UI Emoji\"',\r\n\t\t\t\t'\"Segoe UI Symbol\"',\r\n\t\t\t].join(','),\r\n\t\t\t// Tell Material-UI what's the font-size on the html element is.\r\n\t\t\thtmlFontSize: 10, // font-size: 62.5%; /* 62.5% of 16px = 10px */\r\n\t\t},\r\n\t},\r\n});\r\n\r\nexport default responsiveFontSizes(theme);\r\n","import * as serviceWorker from './ui/serviceWorker';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { SignUp } from './ui/components';\r\nimport theme from './ui/theme/index';\r\nimport { ThemeProvider } from '@material-ui/core/styles';\r\n\r\nReactDOM.render(\r\n\t<React.StrictMode>\r\n\t\t<ThemeProvider theme={theme}>\r\n\t\t\t{/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\r\n\t\t\t<CssBaseline />\r\n\t\t\t<SignUp />\r\n\t\t</ThemeProvider>\r\n\t</React.StrictMode>,\r\n\tdocument.getElementById('root'),\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}